<?xml version="1.0" encoding="UTF-8" ?>

<project
    xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:checkstyle="antlib:com.puppycrawl.tools.checkstyle"
    xmlns:sonar="antlib:org.sonar.ant"
    xmlns:unless="ant:unless"
    name="jmeter-rmi-plugin" default="help" basedir="./">
  <description>Apache JMeter RMI protocol plugin</description>

  <property file="${user.home}/.${ant.project.name}-build.properties" />
  <property file="${user.home}/.build.properties"/>
  <property file="build.properties" />

  <property name="source.directory" location="src" />
  <property name="test.directory"   location="test" />

  <property name="build.directory" location="build/main" />
  <property name="build.test.directory" location="build/test" />
  <property name="dist.directory" location="build/" />

  <path id="base.lib">
    <fileset
        dir="bootstrap-lib"
        includes="**/*.jar" />
  </path>

  <path id="production.lib">
    <path refid="base.lib" />
    <fileset
        dir="lib/production"
        includes="**/*.jar" />
  </path>

  <path id="development.lib">
    <path refid="base.lib" />
    <fileset
        dir="lib/development"
        includes="**/*.jar" />
  </path>

  <path id="test.lib">
    <path refid="base.lib" />
    <fileset
        dir="lib/test"
        includes="**/*.jar" />
  </path>

  <path id="fitnesse.test.lib">
    <path refid="base.lib" />
    <path refid="test.lib" />
    <fileset
        dir="lib/fitnesse-test"
        includes="**/*.jar" />
  </path>

  <path id="sonar.lib">
    <path refid="base.lib" />
    <fileset
        dir="lib/sonar"
        includes="**/*.jar" />
  </path>

  <taskdef
      resource="org/apache/ivy/ant/antlib.xml"
      uri="antlib:org.apache.ivy.ant"
      classpathref="base.lib" />
  <ivy:settings file="ivysettings.xml" />

  <target name="bootstrap">
    <ivy:retrieve pattern="lib/[conf]/[artifact].[ext]" />
  </target>

  <target name="help">
    <echo>
      Builds the Apache JMeter RMI protocol plugin.
      See -projecthelp for build targets.
    </echo>
  </target>

  <target name="all" depends="clean,jar"
          description="Build a clean JAR for the plugin">
  </target>

  <target name="init" description="Initialization for Build">
    <tstamp />
    <mkdir dir="${build.directory}" />
    <mkdir dir="${build.test.directory}" />
  </target>

  <target name="build-rmi" depends="init"
          description="Build the RMI components">
    <javac srcdir="${source.directory}"
           destdir="${build.directory}"
           fork="true"
           includeantruntime="false"
           debug="${build.debug}"
           source="1.8"
           target="1.8">
      <compilerarg line="-Xlint:deprecation -Xlint:unchecked" />
      <classpath>
        <path refid="development.lib" />
      </classpath>
    </javac>
  </target>

  <target name="build-rmi-tests" depends="build-rmi"
          description="Build the JUnit tests">

    <javac srcdir="${test.directory}"
           destdir="${build.test.directory}"
           debug="${build.debug}"
           includeantruntime="false">
      <!-- compilerarg line="${build.compiler.args}" / -->
      <compilerarg line="-Xlint:deprecation -Xlint:unchecked" />
      <classpath>
        <path refid="test.lib" />
        <pathelement location="${build.directory}" />
      </classpath>
    </javac>
  </target>

  <target name="test" depends="build-rmi-tests"
          description="Run all JUnit tests">
    <junit
        printsummary="yes"
        haltonfailure="no"
        failureproperty="tests.failed"
        fork="yes"
        forkmode="once">
      <classpath>
        <path refid="test.lib" />
        <pathelement location="${build.directory}" />
        <pathelement location="${build.test.directory}" />
      </classpath>

      <formatter type="xml" />
      <batchtest todir="${build.test.directory}">
        <fileset dir="${build.test.directory}">
          <include name="**/*Test.class"/>
          <include name="**/*Suite.class"/>
          <exclude name="fixture/**" />
          <exclude name="**/Base*.class" />
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="build/test">
      <fileset dir="build/test" includes="TEST-*.xml" />
      <report format="frames" todir="${build.test.directory}/html" />
    </junitreport>
    <fail if="tests.failed">
      One or more tests failed. Open build/test/html/index.html for details
    </fail>
  </target>

  <target name="jar" depends="build-rmi"
          description="Package the RMI protocol plugin (JAR)">

    <jar jarfile="${dist.directory}/ApacheJMeter_rmi.jar"
         basedir="${build.directory}"
         index="false">
      <manifest>
        <attribute name="Project-Name" value="JMeter RMI protocol plugin" />
        <attribute name="Built-By" value="${user.name}" />
	<attribute name="Main-Class" value="com.jmibanez.tools.jmeter.NativeRmiProxy" />
      </manifest>
    </jar>
  </target>

  <target name="clean"
          description="Remove files generated by a build">
    <delete dir="${build.directory}" />
    <delete dir="${dist.directory}"/>
    <delete dir="${doc.directory}/api" />
  </target>
</project>
